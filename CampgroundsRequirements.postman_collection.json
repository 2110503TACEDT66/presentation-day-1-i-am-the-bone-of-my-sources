{
	"info": {
		"_postman_id": "af5b4862-442b-4ace-8e76-7e55fcbaadca",
		"name": "Campgrounds",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "33070823"
	},
	"item": [
		{
			"name": "Requirement",
			"item": [
				{
					"name": "User",
					"item": [
						{
							"name": "Register & Login",
							"item": [
								{
									"name": "Register User",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.environment.set(\"TOKEN\", pm.response.json().token);\r",
													"pm.collectionVariables.set(\"TOKEN\", pm.response.json().token);\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": "JSON Type",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"{{$randomUserName}}\",\r\n    \"tel\": \"1234567890\",\r\n    \"email\": \"{{$randomEmail}}\",\r\n    \"password\": \"123456\",\r\n    \"role\": \"user\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{URL}}/api/v1/auth/register",
											"host": [
												"{{URL}}"
											],
											"path": [
												"api",
												"v1",
												"auth",
												"register"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Logged In User",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.environment.set(\"USER_EMAIL\", pm.response.json().data.email);\r",
													"pm.collectionVariables.set(\"USER_EMAIL\", pm.response.json().data.email);\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{URL}}/api/v1/auth/me",
											"host": [
												"{{URL}}"
											],
											"path": [
												"api",
												"v1",
												"auth",
												"me"
											]
										}
									},
									"response": []
								},
								{
									"name": "Login User",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.environment.set(\"TOKEN\", pm.response.json().token);\r",
													"pm.collectionVariables.set(\"TOKEN\", pm.response.json().token);\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": "JSON Type",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"{{USER_EMAIL}}\",\r\n    \"password\": \"123456\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{URL}}/api/v1/auth/login",
											"host": [
												"{{URL}}"
											],
											"path": [
												"api",
												"v1",
												"auth",
												"login"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "View & Create",
							"item": [
								{
									"name": "Get All Campgrounds",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"const response = pm.response.json();\r",
													"\r",
													"console.log(response);\r",
													"\r",
													"pm.test(\"There are campgrounds\", () => {\r",
													"    pm.expect(response.data.count()).to.be.above(0);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{URL}}/api/v1/campgrounds",
											"host": [
												"{{URL}}"
											],
											"path": [
												"api",
												"v1",
												"campgrounds"
											]
										},
										"description": "Fetch all hospitals from database."
									},
									"response": []
								},
								{
									"name": "Get Single Campground",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{URL}}/api/v1/campgrounds/:campground_ID",
											"host": [
												"{{URL}}"
											],
											"path": [
												"api",
												"v1",
												"campgrounds",
												":campground_ID"
											],
											"variable": [
												{
													"key": "campground_ID",
													"value": "{{campground_ID}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Add Booking 1",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.environment.set(\"booking 1\", pm.response.json().data._id)\r",
													"pm.collectionVariables.set(\"booking 1\", pm.response.json().data._id)\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": "JSON Type",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"bookDate\": \"{{$randomDateFuture}}\",\r\n    \"time\": \"00:00\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{URL}}/api/v1/campgrounds/:campground_ID/bookings/",
											"host": [
												"{{URL}}"
											],
											"path": [
												"api",
												"v1",
												"campgrounds",
												":campground_ID",
												"bookings",
												""
											],
											"variable": [
												{
													"key": "campground_ID",
													"value": "{{campground_ID}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Add Booking 2",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.environment.set(\"booking 2\", pm.response.json().data._id)\r",
													"pm.collectionVariables.set(\"booking 2\", pm.response.json().data._id)"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": "JSON Type",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"bookDate\": \"{{$randomDateFuture}}\",\r\n    \"time\": \"00:00\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{URL}}/api/v1/campgrounds/:campground_ID/bookings/",
											"host": [
												"{{URL}}"
											],
											"path": [
												"api",
												"v1",
												"campgrounds",
												":campground_ID",
												"bookings",
												""
											],
											"variable": [
												{
													"key": "campground_ID",
													"value": "{{campground_ID}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Add Booking 3",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.environment.set(\"booking 3\", pm.response.json().data._id)\r",
													"pm.collectionVariables.set(\"booking 3\", pm.response.json().data._id)"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": "JSON Type",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"bookDate\": \"{{$randomDateFuture}}\",\r\n    \"time\": \"00:00\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{URL}}/api/v1/campgrounds/:campground_ID/bookings/",
											"host": [
												"{{URL}}"
											],
											"path": [
												"api",
												"v1",
												"campgrounds",
												":campground_ID",
												"bookings",
												""
											],
											"variable": [
												{
													"key": "campground_ID",
													"value": "{{campground_ID}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Add Booking 4 INVALID",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": "JSON Type",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"bookDate\": \"{{$randomDateFuture}}\",\r\n    \"time\": \"00:00\",\r\n    \"campground\": \"{{campground_ID}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{URL}}/api/v1/campgrounds/:campground_ID/bookings/",
											"host": [
												"{{URL}}"
											],
											"path": [
												"api",
												"v1",
												"campgrounds",
												":campground_ID",
												"bookings",
												""
											],
											"variable": [
												{
													"key": "campground_ID",
													"value": "{{campground_ID}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get All Bookings",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"const response = pm.response.json();\r",
													"\r",
													"console.log(response);\r",
													"\r",
													"pm.test(\"There are bookings\", () => {\r",
													"    pm.expect(response.data.count()).to.be.above(0);\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{URL}}/api/v1/bookings",
											"host": [
												"{{URL}}"
											],
											"path": [
												"api",
												"v1",
												"bookings"
											]
										},
										"description": "Fetch all hospitals from database."
									},
									"response": []
								},
								{
									"name": "Get Booking 1",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{URL}}/api/v1/bookings/:booking_ID",
											"host": [
												"{{URL}}"
											],
											"path": [
												"api",
												"v1",
												"bookings",
												":booking_ID"
											],
											"variable": [
												{
													"key": "booking_ID",
													"value": "{{booking 1}}"
												}
											]
										},
										"description": "Fetch all hospitals from database."
									},
									"response": []
								},
								{
									"name": "Update Booking 1",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"description": "JSON Type",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"bookDate\": \"{{$randomDateFuture}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{URL}}/api/v1/bookings/:booking_ID",
											"host": [
												"{{URL}}"
											],
											"path": [
												"api",
												"v1",
												"bookings",
												":booking_ID"
											],
											"variable": [
												{
													"key": "booking_ID",
													"value": "{{booking 1}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Booking 1",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{URL}}/api/v1/bookings/:booking_ID",
											"host": [
												"{{URL}}"
											],
											"path": [
												"api",
												"v1",
												"bookings",
												":booking_ID"
											],
											"variable": [
												{
													"key": "booking_ID",
													"value": "{{booking 1}}"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Logout",
							"item": [
								{
									"name": "Get Logged In User Before Logout",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{URL}}/api/v1/auth/me",
											"host": [
												"{{URL}}"
											],
											"path": [
												"api",
												"v1",
												"auth",
												"me"
											]
										}
									},
									"response": []
								},
								{
									"name": "Logout",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.environment.set(\"TOKEN\", null)\r",
													"pm.collectionVariables.set(\"TOKEN\", null)\r",
													"\r",
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{URL}}/api/v1/auth/logout",
											"host": [
												"{{URL}}"
											],
											"path": [
												"api",
												"v1",
												"auth",
												"logout"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Logged In User After Logout",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 401 (Unauthorized)\", function () {\r",
													"    pm.response.to.have.status(401);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{TOKEN}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{URL}}/api/v1/auth/me",
											"host": [
												"{{URL}}"
											],
											"path": [
												"api",
												"v1",
												"auth",
												"me"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "Admin",
					"item": [
						{
							"name": "Login admin",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.environment.set(\"TOKEN\", pm.response.json().token);\r",
											"pm.collectionVariables.set(\"TOKEN\", pm.response.json().token);\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "JSON Type",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"john@gmail.com\",\r\n    \"password\": \"123456\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/api/v1/auth/login",
									"host": [
										"{{URL}}"
									],
									"path": [
										"api",
										"v1",
										"auth",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get All Bookings",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"const response = pm.response.json();\r",
											"\r",
											"console.log(response);\r",
											"\r",
											"pm.test(\"There are bookings\", () => {\r",
											"    pm.expect(response.data.count()).to.be.above(0);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{URL}}/api/v1/bookings",
									"host": [
										"{{URL}}"
									],
									"path": [
										"api",
										"v1",
										"bookings"
									]
								},
								"description": "Fetch all hospitals from database."
							},
							"response": []
						},
						{
							"name": "Get Booking 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{URL}}/api/v1/bookings/:booking_ID",
									"host": [
										"{{URL}}"
									],
									"path": [
										"api",
										"v1",
										"bookings",
										":booking_ID"
									],
									"variable": [
										{
											"key": "booking_ID",
											"value": "{{booking 2}}"
										}
									]
								},
								"description": "Fetch all hospitals from database."
							},
							"response": []
						},
						{
							"name": "Update Booking 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"description": "JSON Type",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"apptDate\": \"2025-01-01\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/api/v1/bookings/:booking_id",
									"host": [
										"{{URL}}"
									],
									"path": [
										"api",
										"v1",
										"bookings",
										":booking_id"
									],
									"variable": [
										{
											"key": "booking_id",
											"value": "{{booking 2}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Booking 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{URL}}/api/v1/bookings/:booking_ID",
									"host": [
										"{{URL}}"
									],
									"path": [
										"api",
										"v1",
										"bookings",
										":booking_ID"
									],
									"variable": [
										{
											"key": "booking_ID",
											"value": "{{booking 2}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Booking 2 FAILED",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404 (NOT FOUND)\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{URL}}/api/v1/bookings/:booking_ID",
									"host": [
										"{{URL}}"
									],
									"path": [
										"api",
										"v1",
										"bookings",
										":booking_ID"
									],
									"variable": [
										{
											"key": "booking_ID",
											"value": "{{booking 2}}"
										}
									]
								},
								"description": "Fetch all hospitals from database."
							},
							"response": []
						},
						{
							"name": "Delete Booking 3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{URL}}/api/v1/bookings/:booking_ID",
									"host": [
										"{{URL}}"
									],
									"path": [
										"api",
										"v1",
										"bookings",
										":booking_ID"
									],
									"variable": [
										{
											"key": "booking_ID",
											"value": "{{booking 3}}"
										}
									]
								}
							},
							"response": []
						}
					]
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "URL",
			"value": "http://localhost:5000",
			"type": "string"
		},
		{
			"key": "TOKEN",
			"value": ""
		},
		{
			"key": "USER_EMAIL",
			"value": ""
		},
		{
			"key": "campground_ID",
			"value": "65e31dbe88ba36a8bf402fcf",
			"type": "string"
		},
		{
			"key": "booking 1",
			"value": ""
		},
		{
			"key": "booking 2",
			"value": ""
		},
		{
			"key": "booking 3",
			"value": ""
		}
	]
}